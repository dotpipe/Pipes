only usage: onclick="pipes(this)"
to begin using the PipesJS code in other ways than <dyn> <pipe> and <timed>.
Usable DOM Attributes (almost all are optional
upto x > 134,217,000 different configurations 
with unlimited inputs/outputs):
Attribute/Tag     |  Use Case
-------------------------------------------------------------
insert............= (key) return ajax call to this id
ajax..............= (key) calls and returns the value file's output ex: <pipe ajax="foo.bar" query="key0:value0;" insert="someID">
callback..........= (key) calls function set as attribute value
query.............= (key) default query string associated with url ex: <anyTag query="key0:value0;key1:value2;" ajax="page.foo">
<download>........= (tag) for downloading files ex: <download file="foo.zip" directory="/home/bar/"> (needs ending with slash)
file..............= (key) filename to download
directory.........= (key) relative or full path of 'file'
redirect..........= (class) "follow" the ajax call in POST or GET mode ex: <pipe ajax="foo.bar" class="redirect" query="key0:value0;" insert="someID">
js................= (key - Modala) [Specifically a] Modala key/value pair. Allows access to outside JavaScript files in scope of top nest.
css...............= (key - Modala) [Specifically a] Modala key/value pair. Imports a stylesheet file to the page accessing it.
<lnk>.............= (tag) for clickable link <lnk ajax="goinghere.html" query="key0:value0;">
<pipe>............= (tag)  (initializes on DOMContentLoaded Event) ex: <pipe ajax="foo.bar" query="key0:value0;" insert="someID">
<dyn>.............= (tag) Automatic eventListening tag for onclick="pipes(this)" ex: <dyn ajax="foo.bar" query="key0:value0;" insert="someID">
dyn-one...........= (class) stops recurring clicking activities 
plain-text........= (class) plain text return to the insertion point
plain-html........= (class) returns as true HTML
<timed>...........= (tag) Timed result refreshing tags (Keep up-to-date handling on page) ex: <timed ajax="foo.bar" delay="3000" query="key0:value0;" insert="someID">
delay.............= (key) delay between <timed> tag refreshes (required for <timed> tag) ex: see <timed>
<carousel>........= (tag) to create a carousel that moves every a timeOut() delay="x" occurs ex: <carousel ajax="foo.bar" file-order="foo.bar;bar.foo;foobar.barfoo" delay="3000" id="thisId" insert="thisId" height="100" width="100" boxes="8" style="height:100;width:800">
carousel-ajax.....= (class) create Modalas for carousel use.
carousel-auto-off.= (class) Class to stop carousel from moving (better to create buttons)
carousel-vert.....= (class)  to make carousel vertical, instead of horizontal (default)
boxes.............= (key) <carousel> attribute to request for x boxes for pictures
file-order........= (key) ajax to these files, iterating [0,1,2,3]%array.length per call (delimited by ';') ex: <pipe query="key0:value0;" file-order="foo.bar;bar.foo;foobar.barfoo" insert="someID">
file-index........= (key) counter of which index to use with file-order to go with ajax ex: <pipe ajax="foo.bar" query="key0:value0;" insert="someID">
incrIndex.........= (key) increment thru index of file-order (0 moves once) (default: 1) ex: <pipe ajax="foo.bar" class="incrIndex" interval="2" file-order="foo.bar;bar.foo;foobar.barfoo" insert="someID">
decrIndex.........= (key) decrement thru index of file-order (0 moves once) (default: 1) ex: <pipe ajax="foo.bar" class="decrIndex" interval="3" file-order="foo.bar;bar.foo;foobar.barfoo" insert="someID">
interval..........= (key) Take this many steps when stepping through file-order default = 1
set-attr..........= (key) attribute to set in target HTML tag ex: <pipe id="thisOrSomeId" set-attr="value" ajax="foo.bar" query="key0:value0;" insert="thisOrSomeID">
mode..............= (key) "POST" or "GET" (default: "POST") ex: <pipe mode="POST" set-attr="value" ajax="foo.bar" query="key0:value0;" insert="thisOrSomeID">
pipe..............= (key) creates a listener on the object. use event="eventType" to relegate.
multiple..........= (key) states that this object has two or more key/value pairs use: states this is a multi-select form box
remove............= (key) remove element in tag ex: <anyTag remove="someID;someOtherId;">
display...........= (key) toggle visible and invisible of anything in the value ex: <anyTag display="someID;someOtherId;">
json..............= (key) returns a JSON file set as value
headers...........= (key) headers in $_GET (query) style-attribute (delimited by '&') <any ajax="foo.bar" headers="foobar:boo&barfoo:barfoo;q:9&" insert="someID">
form-class........= (key) class name of devoted form elements
mouse.............= (key) class name to work thru PipesJS' other attributes on event="mouseover;mouseleave" (example)
mouse-insert......= (key) class name to work thru PipesJS' other attributes on event="mouseover;mouseleave" (example)
event.............= (key) works with pipe and mouse classes. Creates eventListener on "insert" Node or current Node with mouse.

FILTERS aer go ahead code usually coded in other languages and just come back with a result. Not wholly different from AJAX. They are general purpose files.
ALL HEADERS FOR AJAX are available. They will use defaults to go on if there is no input to replace them.